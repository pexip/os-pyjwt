.TH PYJWT "1" "Dec 2018" "pyjwt 1.7.0" "User Commands"
.SH NAME
pyjwt \- Python implementation of JSON Web Token
.SH SYNOPSIS
.B pyjwt
[\fI\,options\/\fR] <command> [\fI\,options\/\fR] \fI\,input\/\fR
.SH DESCRIPTION
Encodes or decodes JSON Web Tokens based on input
.SH OPTIONS
.TP
\fB\-\-version\fR
show program's version number and exit
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-n\fR, \fB\-\-no\-verify\fR
ignore signature verification on decode
.TP
\fB\-\-key\fR=\fI\,KEY\/\fR
set the secret key to sign with
.TP
\fB\-\-alg\fR=\fI\,ALG\/\fR
set crypto algorithm to sign with. default=HS256
.SS "PyJWT subcommands are: \fI\,encode\/\fR and \fI\,decode\/\fR.
.TP
encode
use to encode a supplied payload
.TP
decode
use to decode a supplied JSON web token
.SH EXAMPLES
Decoding:
.P
pyjwt \fB\-\-key\fR=\fI\,secret\/\fR decode json.web.token

pyjwt decode \fB\-\-no\-verify\fR json.web.token
.P
Encoding requires the key option and takes space separated key/value pairs
separated by equals (=) as input.
.P
Examples:

pyjwt \fB\-\-key\fR=\fI\,secret\/\fR encode iss=me exp=1302049071

pyjwt \fB\-\-key\fR=\fI\,secret\/\fR encode foo=bar exp=+10

The exp key is special and can take an offset to current Unix time.
.SH AUTHOR
Jeff Lindsay <progrium@gmail.com>
.PP
This manual page was written by Daniele Tricoli <eriol@mornie.org>, for the
Debian project (but may be used by others).

